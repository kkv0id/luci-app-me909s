#!/bin/sh

[ "$ACTION" = "add" ] && [ "$DEVTYPE" = "usb_device" ] || exit 0

. /lib/functions.sh
. /lib/netifd/netifd-proto.sh

vid=$(cat /sys$DEVPATH/idVendor)
pid=$(cat /sys$DEVPATH/idProduct)
usb="/lib/network/wwan/$vid:$pid"
[ -f $usb ] || exit 0
__FIND_ECM_IFACE=0

modem_init() {
    local interface=$1
    local old_cb control atcom device ctl_device dat_device
    
    json_set_namespace ecm old_cb
    json_init
    json_load "$(cat $usb)"
    json_select
    json_get_vars desc type control atcom
    json_set_namespace $old_cb
    [ -n "$control" ] && [ -n "$atcom" ] || exit 1
    ctl_device=/dev/ttyUSB$control
    dat_device=/dev/ttyUSB$atcom
    
    config_get device "$interface" device
    [ -n $device ] && [ $device = $ctl_device ] || {
        uci_set network "$interface" device "$ctl_device"
        uci_commit network
    }
    
    if [ $? -eq 0 ];then
        uci_toggle_state network "$interface" ctl_device "$ctl_device"
        uci_toggle_state network "$interface" dat_device "$dat_device"
    fi
}

find_ecm_iface() {
    local interface="$1"
    local proto timeout
    config_get proto "$interface" proto
    [ "$proto" = "ecm" ] || return 0
    __FIND_NDIS_IFACE=1
    proto_set_available "$interface" 0
    modem_init $interface
    
    timeout=0
    while true;do
        # ubus call network.interface.lan status &>/dev/null
        pgrep netifd &>/dev/null
        [ $? -eq 0 ] && break
        [ $timeout -gt 30 ] && exit 1
        timeout=$((timeout+1))
        sleep 1
    done
    
    proto_set_available "$interface" 1
    ifup $interface
    exit 0
}

config_load network
config_foreach find_ecm_iface interface

if [ $__FIND_ECM_IFACE -eq 0 ];then
    uci -q batch <<EOF
delete network.me909s
set network.me909s='interface'
set network.me909s.auto='0'
set network.me909s.profile=2
set network.me909s.apn='auto'
set network.me909s.proto='ecm'
set network.me909s.ipv6='auto'
set network.me909s.delay='10'
set network.me909s.pdptype='IPV4V6'
add_list firewall.@zone[-1].network='me909s'
EOF
    uci commit
    config_load network
    config_foreach find_ecm_iface interface
fi

